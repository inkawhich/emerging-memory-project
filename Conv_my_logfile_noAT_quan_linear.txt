nbits:1
all_conv_quan(
  (features): Sequential(
    (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace)
    (2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): ReLU(inplace)
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace)
    (8): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (9): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1))
  )
)
[0/10][0/469] train_loss: 0.017989 train_acc: 0.062500
[0/10][100/469] train_loss: 0.017989 train_acc: 0.096380
[0/10][200/469] train_loss: 0.017989 train_acc: 0.099347
[0/10][300/469] train_loss: 0.017989 train_acc: 0.099382
[0/10][400/469] train_loss: 0.017989 train_acc: 0.098640
Clean dataset testing:[0/10] val_loss: 0.018190 val_acc: 0.098000
AT dataset testing:[0/10] val_loss: 0.018190 val_acc: 0.098000
[1/10][0/469] train_loss: 0.017989 train_acc: 0.078125
[1/10][100/469] train_loss: 0.017989 train_acc: 0.099629
[1/10][200/469] train_loss: 0.017989 train_acc: 0.099464
[1/10][300/469] train_loss: 0.017989 train_acc: 0.099901
[1/10][400/469] train_loss: 0.017989 train_acc: 0.098426
Clean dataset testing:[1/10] val_loss: 0.018190 val_acc: 0.098000
AT dataset testing:[1/10] val_loss: 0.018190 val_acc: 0.098000
[2/10][0/469] train_loss: 0.017989 train_acc: 0.093750
[2/10][100/469] train_loss: 0.017989 train_acc: 0.096303
[2/10][200/469] train_loss: 0.017994 train_acc: 0.096393
[2/10][300/469] train_loss: 0.018001 train_acc: 0.099278
[2/10][400/469] train_loss: 0.018005 train_acc: 0.099965
Clean dataset testing:[2/10] val_loss: 0.018190 val_acc: 0.098000
AT dataset testing:[2/10] val_loss: 0.018190 val_acc: 0.098000
[3/10][0/469] train_loss: 0.017989 train_acc: 0.093750
[3/10][100/469] train_loss: 0.018018 train_acc: 0.102800
[3/10][200/469] train_loss: 0.018035 train_acc: 0.100591
[3/10][300/469] train_loss: 0.018039 train_acc: 0.098915
[3/10][400/469] train_loss: 0.018042 train_acc: 0.100062
Clean dataset testing:[3/10] val_loss: 0.018545 val_acc: 0.113500
AT dataset testing:[3/10] val_loss: 0.018545 val_acc: 0.113500
[4/10][0/469] train_loss: 0.018068 train_acc: 0.148438
[4/10][100/469] train_loss: 0.018052 train_acc: 0.100325
[4/10][200/469] train_loss: 0.018047 train_acc: 0.100630
[4/10][300/469] train_loss: 0.018041 train_acc: 0.099201
[4/10][400/469] train_loss: 0.018044 train_acc: 0.098854
Clean dataset testing:[4/10] val_loss: 0.018190 val_acc: 0.098000
AT dataset testing:[4/10] val_loss: 0.018190 val_acc: 0.098000
[5/10][0/469] train_loss: 0.017989 train_acc: 0.109375
[5/10][100/469] train_loss: 0.018054 train_acc: 0.097772
[5/10][200/469] train_loss: 0.018042 train_acc: 0.100435
[5/10][300/469] train_loss: 0.018040 train_acc: 0.101537
[5/10][400/469] train_loss: 0.018040 train_acc: 0.101017
Clean dataset testing:[5/10] val_loss: 0.018190 val_acc: 0.098000
AT dataset testing:[5/10] val_loss: 0.018190 val_acc: 0.098000
[6/10][0/469] train_loss: 0.017989 train_acc: 0.054688
[6/10][100/469] train_loss: 0.018058 train_acc: 0.100248
[6/10][200/469] train_loss: 0.018058 train_acc: 0.099580
[6/10][300/469] train_loss: 0.018058 train_acc: 0.099486
[6/10][400/469] train_loss: 0.018050 train_acc: 0.099965
Clean dataset testing:[6/10] val_loss: 0.018190 val_acc: 0.098000
AT dataset testing:[6/10] val_loss: 0.018190 val_acc: 0.098000
[7/10][0/469] train_loss: 0.017989 train_acc: 0.148438
[7/10][100/469] train_loss: 0.018022 train_acc: 0.101717
[7/10][200/469] train_loss: 0.018031 train_acc: 0.102573
[7/10][300/469] train_loss: 0.018044 train_acc: 0.100213
[7/10][400/469] train_loss: 0.018050 train_acc: 0.101387
Clean dataset testing:[7/10] val_loss: 0.018382 val_acc: 0.098000
AT dataset testing:[7/10] val_loss: 0.018382 val_acc: 0.098000
[8/10][0/469] train_loss: 0.018211 train_acc: 0.218750
[8/10][100/469] train_loss: 0.018085 train_acc: 0.096612
[8/10][200/469] train_loss: 0.018067 train_acc: 0.099308
[8/10][300/469] train_loss: 0.018058 train_acc: 0.099720
[8/10][400/469] train_loss: 0.018063 train_acc: 0.100608
Clean dataset testing:[8/10] val_loss: 0.018904 val_acc: 0.102800
AT dataset testing:[8/10] val_loss: 0.018904 val_acc: 0.102800
[9/10][0/469] train_loss: 0.018672 train_acc: 0.093750
[9/10][100/469] train_loss: 0.018059 train_acc: 0.100402
[9/10][200/469] train_loss: 0.018059 train_acc: 0.101835
[9/10][300/469] train_loss: 0.018075 train_acc: 0.102211
[9/10][400/469] train_loss: 0.018076 train_acc: 0.100881
Clean dataset testing:[9/10] val_loss: 0.018190 val_acc: 0.098000
AT dataset testing:[9/10] val_loss: 0.018190 val_acc: 0.098000
nbits:2
all_conv_quan(
  (features): Sequential(
    (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace)
    (2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): ReLU(inplace)
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace)
    (8): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (9): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1))
  )
)
[0/10][0/469] train_loss: 0.017989 train_acc: 0.070312
[0/10][100/469] train_loss: 0.017989 train_acc: 0.092512
[0/10][200/469] train_loss: 0.017989 train_acc: 0.097870
[0/10][300/469] train_loss: 0.017989 train_acc: 0.099824
[0/10][400/469] train_loss: 0.017990 train_acc: 0.100569
Clean dataset testing:[0/10] val_loss: 0.018190 val_acc: 0.098000
AT dataset testing:[0/10] val_loss: 0.018190 val_acc: 0.098000
[1/10][0/469] train_loss: 0.017989 train_acc: 0.085938
[1/10][100/469] train_loss: 0.017995 train_acc: 0.101176
[1/10][200/469] train_loss: 0.018001 train_acc: 0.102184
[1/10][300/469] train_loss: 0.018000 train_acc: 0.100369
[1/10][400/469] train_loss: 0.018001 train_acc: 0.101192
Clean dataset testing:[1/10] val_loss: 0.018199 val_acc: 0.098000
AT dataset testing:[1/10] val_loss: 0.018199 val_acc: 0.098000
[2/10][0/469] train_loss: 0.018008 train_acc: 0.039062
[2/10][100/469] train_loss: 0.018006 train_acc: 0.099397
[2/10][200/469] train_loss: 0.018003 train_acc: 0.101018
[2/10][300/469] train_loss: 0.018002 train_acc: 0.102860
[2/10][400/469] train_loss: 0.018001 train_acc: 0.102868
Clean dataset testing:[2/10] val_loss: 0.018190 val_acc: 0.098000
AT dataset testing:[2/10] val_loss: 0.018190 val_acc: 0.098000
[3/10][0/469] train_loss: 0.017989 train_acc: 0.093750
[3/10][100/469] train_loss: 0.018007 train_acc: 0.103960
[3/10][200/469] train_loss: 0.018005 train_acc: 0.102884
[3/10][300/469] train_loss: 0.018003 train_acc: 0.104781
[3/10][400/469] train_loss: 0.018005 train_acc: 0.104173
Clean dataset testing:[3/10] val_loss: 0.018198 val_acc: 0.113500
AT dataset testing:[3/10] val_loss: 0.018198 val_acc: 0.113500
[4/10][0/469] train_loss: 0.017967 train_acc: 0.125000
[4/10][100/469] train_loss: 0.018005 train_acc: 0.100866
[4/10][200/469] train_loss: 0.018009 train_acc: 0.100824
[4/10][300/469] train_loss: 0.018007 train_acc: 0.103016
[4/10][400/469] train_loss: 0.018009 train_acc: 0.102381
Clean dataset testing:[4/10] val_loss: 0.018198 val_acc: 0.113500
AT dataset testing:[4/10] val_loss: 0.018198 val_acc: 0.113500
[5/10][0/469] train_loss: 0.017926 train_acc: 0.140625
[5/10][100/469] train_loss: 0.018003 train_acc: 0.104966
[5/10][200/469] train_loss: 0.018001 train_acc: 0.105799
[5/10][300/469] train_loss: 0.018001 train_acc: 0.107714
[5/10][400/469] train_loss: 0.018002 train_acc: 0.106414
Clean dataset testing:[5/10] val_loss: 0.018199 val_acc: 0.098000
AT dataset testing:[5/10] val_loss: 0.018199 val_acc: 0.098000
[6/10][0/469] train_loss: 0.018110 train_acc: 0.140625
[6/10][100/469] train_loss: 0.018000 train_acc: 0.112624
[6/10][200/469] train_loss: 0.018006 train_acc: 0.108326
[6/10][300/469] train_loss: 0.018005 train_acc: 0.107117
[6/10][400/469] train_loss: 0.018006 train_acc: 0.106706
Clean dataset testing:[6/10] val_loss: 0.018198 val_acc: 0.113500
AT dataset testing:[6/10] val_loss: 0.018198 val_acc: 0.113500
[7/10][0/469] train_loss: 0.018007 train_acc: 0.109375
[7/10][100/469] train_loss: 0.018007 train_acc: 0.100402
[7/10][200/469] train_loss: 0.018011 train_acc: 0.103078
[7/10][300/469] train_loss: 0.018010 train_acc: 0.103353
[7/10][400/469] train_loss: 0.018008 train_acc: 0.104232
Clean dataset testing:[7/10] val_loss: 0.018190 val_acc: 0.098000
AT dataset testing:[7/10] val_loss: 0.018190 val_acc: 0.098000
[8/10][0/469] train_loss: 0.017989 train_acc: 0.085938
[8/10][100/469] train_loss: 0.018006 train_acc: 0.105507
[8/10][200/469] train_loss: 0.018009 train_acc: 0.102146
[8/10][300/469] train_loss: 0.018005 train_acc: 0.103198
[8/10][400/469] train_loss: 0.018008 train_acc: 0.102498
Clean dataset testing:[8/10] val_loss: 0.018198 val_acc: 0.113500
AT dataset testing:[8/10] val_loss: 0.018198 val_acc: 0.113500
[9/10][0/469] train_loss: 0.017946 train_acc: 0.132812
[9/10][100/469] train_loss: 0.018004 train_acc: 0.101872
[9/10][200/469] train_loss: 0.018002 train_acc: 0.102923
[9/10][300/469] train_loss: 0.018004 train_acc: 0.102834
[9/10][400/469] train_loss: 0.018004 train_acc: 0.103511
Clean dataset testing:[9/10] val_loss: 0.018268 val_acc: 0.102800
AT dataset testing:[9/10] val_loss: 0.018268 val_acc: 0.102800
nbits:3
all_conv_quan(
  (features): Sequential(
    (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace)
    (2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): ReLU(inplace)
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace)
    (8): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (9): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1))
  )
)
[0/10][0/469] train_loss: 0.018029 train_acc: 0.085938
[0/10][100/469] train_loss: 0.011443 train_acc: 0.522355
[0/10][200/469] train_loss: 0.007665 train_acc: 0.680581
[0/10][300/469] train_loss: 0.006067 train_acc: 0.748754
[0/10][400/469] train_loss: 0.005098 train_acc: 0.789764
Clean dataset testing:[0/10] val_loss: 0.001731 val_acc: 0.932700
AT dataset testing:[0/10] val_loss: 0.081254 val_acc: 0.000000
[1/10][0/469] train_loss: 0.001202 train_acc: 0.953125
[1/10][100/469] train_loss: 0.001732 train_acc: 0.929997
[1/10][200/469] train_loss: 0.001673 train_acc: 0.932797
[1/10][300/469] train_loss: 0.001628 train_acc: 0.934853
[1/10][400/469] train_loss: 0.001530 train_acc: 0.939117
Clean dataset testing:[1/10] val_loss: 0.001035 val_acc: 0.958900
AT dataset testing:[1/10] val_loss: 0.092198 val_acc: 0.000000
[2/10][0/469] train_loss: 0.000574 train_acc: 0.976562
[2/10][100/469] train_loss: 0.001136 train_acc: 0.955446
[2/10][200/469] train_loss: 0.001095 train_acc: 0.955263
[2/10][300/469] train_loss: 0.001099 train_acc: 0.955617
[2/10][400/469] train_loss: 0.001067 train_acc: 0.957255
Clean dataset testing:[2/10] val_loss: 0.000776 val_acc: 0.968300
AT dataset testing:[2/10] val_loss: 0.095006 val_acc: 0.000000
[3/10][0/469] train_loss: 0.001028 train_acc: 0.968750
[3/10][100/469] train_loss: 0.001011 train_acc: 0.960241
[3/10][200/469] train_loss: 0.000922 train_acc: 0.963775
[3/10][300/469] train_loss: 0.000921 train_acc: 0.963741
[3/10][400/469] train_loss: 0.000901 train_acc: 0.964620
Clean dataset testing:[3/10] val_loss: 0.000669 val_acc: 0.973700
AT dataset testing:[3/10] val_loss: 0.107270 val_acc: 0.000000
[4/10][0/469] train_loss: 0.000504 train_acc: 0.992188
[4/10][100/469] train_loss: 0.000909 train_acc: 0.963181
[4/10][200/469] train_loss: 0.000852 train_acc: 0.966573
[4/10][300/469] train_loss: 0.000834 train_acc: 0.967245
[4/10][400/469] train_loss: 0.000818 train_acc: 0.967951
Clean dataset testing:[4/10] val_loss: 0.000749 val_acc: 0.971600
AT dataset testing:[4/10] val_loss: 0.112381 val_acc: 0.000000
[5/10][0/469] train_loss: 0.001032 train_acc: 0.937500
[5/10][100/469] train_loss: 0.000625 train_acc: 0.972772
[5/10][200/469] train_loss: 0.000637 train_acc: 0.972365
[5/10][300/469] train_loss: 0.000672 train_acc: 0.971735
[5/10][400/469] train_loss: 0.000663 train_acc: 0.972666
Clean dataset testing:[5/10] val_loss: 0.000521 val_acc: 0.979500
AT dataset testing:[5/10] val_loss: 0.107026 val_acc: 0.000000
[6/10][0/469] train_loss: 0.000553 train_acc: 0.984375
[6/10][100/469] train_loss: 0.000669 train_acc: 0.973468
[6/10][200/469] train_loss: 0.000633 train_acc: 0.974775
[6/10][300/469] train_loss: 0.000618 train_acc: 0.974875
[6/10][400/469] train_loss: 0.000625 train_acc: 0.974653
Clean dataset testing:[6/10] val_loss: 0.000488 val_acc: 0.977700
AT dataset testing:[6/10] val_loss: 0.117634 val_acc: 0.000000
[7/10][0/469] train_loss: 0.000363 train_acc: 0.984375
[7/10][100/469] train_loss: 0.000541 train_acc: 0.978264
[7/10][200/469] train_loss: 0.000558 train_acc: 0.978078
[7/10][300/469] train_loss: 0.000552 train_acc: 0.977886
[7/10][400/469] train_loss: 0.000561 train_acc: 0.977576
Clean dataset testing:[7/10] val_loss: 0.000455 val_acc: 0.981500
AT dataset testing:[7/10] val_loss: 0.115797 val_acc: 0.000000
[8/10][0/469] train_loss: 0.000422 train_acc: 0.976562
[8/10][100/469] train_loss: 0.000543 train_acc: 0.978496
[8/10][200/469] train_loss: 0.000514 train_acc: 0.979750
[8/10][300/469] train_loss: 0.000509 train_acc: 0.979625
[8/10][400/469] train_loss: 0.000508 train_acc: 0.979660
Clean dataset testing:[8/10] val_loss: 0.000422 val_acc: 0.983200
AT dataset testing:[8/10] val_loss: 0.121875 val_acc: 0.000000
[9/10][0/469] train_loss: 0.000391 train_acc: 0.976562
[9/10][100/469] train_loss: 0.000459 train_acc: 0.981513
[9/10][200/469] train_loss: 0.000446 train_acc: 0.982004
[9/10][300/469] train_loss: 0.000456 train_acc: 0.981338
[9/10][400/469] train_loss: 0.000459 train_acc: 0.981686
Clean dataset testing:[9/10] val_loss: 0.000432 val_acc: 0.982400
AT dataset testing:[9/10] val_loss: 0.120055 val_acc: 0.000000
nbits:4
all_conv_quan(
  (features): Sequential(
    (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace)
    (2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): ReLU(inplace)
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace)
    (8): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (9): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1))
  )
)
[0/10][0/469] train_loss: 0.018020 train_acc: 0.078125
[0/10][100/469] train_loss: 0.011741 train_acc: 0.519647
[0/10][200/469] train_loss: 0.007661 train_acc: 0.686956
[0/10][300/469] train_loss: 0.005955 train_acc: 0.757034
[0/10][400/469] train_loss: 0.004965 train_acc: 0.797323
Clean dataset testing:[0/10] val_loss: 0.001341 val_acc: 0.941200
AT dataset testing:[0/10] val_loss: 0.083032 val_acc: 0.000000
[1/10][0/469] train_loss: 0.001477 train_acc: 0.929688
[1/10][100/469] train_loss: 0.001339 train_acc: 0.947324
[1/10][200/469] train_loss: 0.001290 train_acc: 0.948539
[1/10][300/469] train_loss: 0.001235 train_acc: 0.951386
[1/10][400/469] train_loss: 0.001189 train_acc: 0.954060
Clean dataset testing:[1/10] val_loss: 0.000832 val_acc: 0.967900
AT dataset testing:[1/10] val_loss: 0.095838 val_acc: 0.000000
[2/10][0/469] train_loss: 0.000742 train_acc: 0.968750
[2/10][100/469] train_loss: 0.000884 train_acc: 0.965114
[2/10][200/469] train_loss: 0.000858 train_acc: 0.966185
[2/10][300/469] train_loss: 0.000849 train_acc: 0.966154
[2/10][400/469] train_loss: 0.000827 train_acc: 0.967133
Clean dataset testing:[2/10] val_loss: 0.000671 val_acc: 0.973700
AT dataset testing:[2/10] val_loss: 0.104990 val_acc: 0.000000
[3/10][0/469] train_loss: 0.000706 train_acc: 0.968750
[3/10][100/469] train_loss: 0.000758 train_acc: 0.969833
[3/10][200/469] train_loss: 0.000747 train_acc: 0.971121
[3/10][300/469] train_loss: 0.000737 train_acc: 0.970956
[3/10][400/469] train_loss: 0.000724 train_acc: 0.971283
Clean dataset testing:[3/10] val_loss: 0.000593 val_acc: 0.976100
AT dataset testing:[3/10] val_loss: 0.118517 val_acc: 0.000000
[4/10][0/469] train_loss: 0.000330 train_acc: 0.984375
[4/10][100/469] train_loss: 0.000582 train_acc: 0.976098
[4/10][200/469] train_loss: 0.000603 train_acc: 0.975824
[4/10][300/469] train_loss: 0.000588 train_acc: 0.976407
[4/10][400/469] train_loss: 0.000590 train_acc: 0.976348
Clean dataset testing:[4/10] val_loss: 0.000541 val_acc: 0.977700
AT dataset testing:[4/10] val_loss: 0.114970 val_acc: 0.000000
[5/10][0/469] train_loss: 0.000371 train_acc: 0.984375
[5/10][100/469] train_loss: 0.000630 train_acc: 0.975634
[5/10][200/469] train_loss: 0.000589 train_acc: 0.976485
[5/10][300/469] train_loss: 0.000561 train_acc: 0.977730
[5/10][400/469] train_loss: 0.000554 train_acc: 0.977965
Clean dataset testing:[5/10] val_loss: 0.000431 val_acc: 0.981000
AT dataset testing:[5/10] val_loss: 0.128948 val_acc: 0.000000
[6/10][0/469] train_loss: 0.000220 train_acc: 0.984375
[6/10][100/469] train_loss: 0.000481 train_acc: 0.980275
[6/10][200/469] train_loss: 0.000489 train_acc: 0.979944
[6/10][300/469] train_loss: 0.000497 train_acc: 0.979054
[6/10][400/469] train_loss: 0.000497 train_acc: 0.979349
Clean dataset testing:[6/10] val_loss: 0.000398 val_acc: 0.984000
AT dataset testing:[6/10] val_loss: 0.127305 val_acc: 0.000000
[7/10][0/469] train_loss: 0.000125 train_acc: 1.000000
[7/10][100/469] train_loss: 0.000432 train_acc: 0.983524
[7/10][200/469] train_loss: 0.000419 train_acc: 0.983559
[7/10][300/469] train_loss: 0.000425 train_acc: 0.983259
[7/10][400/469] train_loss: 0.000438 train_acc: 0.982310
Clean dataset testing:[7/10] val_loss: 0.000390 val_acc: 0.983000
AT dataset testing:[7/10] val_loss: 0.130032 val_acc: 0.000000
[8/10][0/469] train_loss: 0.000385 train_acc: 0.984375
[8/10][100/469] train_loss: 0.000400 train_acc: 0.983292
[8/10][200/469] train_loss: 0.000419 train_acc: 0.982548
[8/10][300/469] train_loss: 0.000417 train_acc: 0.982558
[8/10][400/469] train_loss: 0.000419 train_acc: 0.982388
Clean dataset testing:[8/10] val_loss: 0.000373 val_acc: 0.983900
AT dataset testing:[8/10] val_loss: 0.141025 val_acc: 0.000000
[9/10][0/469] train_loss: 0.000123 train_acc: 0.992188
[9/10][100/469] train_loss: 0.000409 train_acc: 0.982983
[9/10][200/469] train_loss: 0.000396 train_acc: 0.984181
[9/10][300/469] train_loss: 0.000387 train_acc: 0.984738
[9/10][400/469] train_loss: 0.000377 train_acc: 0.985154
Clean dataset testing:[9/10] val_loss: 0.000355 val_acc: 0.985900
AT dataset testing:[9/10] val_loss: 0.140389 val_acc: 0.000000
nbits:5
all_conv_quan(
  (features): Sequential(
    (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace)
    (2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): ReLU(inplace)
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace)
    (8): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (9): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1))
  )
)
[0/10][0/469] train_loss: 0.018063 train_acc: 0.132812
[0/10][100/469] train_loss: 0.012346 train_acc: 0.505415
[0/10][200/469] train_loss: 0.008083 train_acc: 0.675917
[0/10][300/469] train_loss: 0.006243 train_acc: 0.749533
[0/10][400/469] train_loss: 0.005151 train_acc: 0.793582
Clean dataset testing:[0/10] val_loss: 0.001421 val_acc: 0.946000
AT dataset testing:[0/10] val_loss: 0.091068 val_acc: 0.000000
[1/10][0/469] train_loss: 0.001393 train_acc: 0.960938
[1/10][100/469] train_loss: 0.001309 train_acc: 0.949335
[1/10][200/469] train_loss: 0.001210 train_acc: 0.953242
[1/10][300/469] train_loss: 0.001139 train_acc: 0.956317
[1/10][400/469] train_loss: 0.001087 train_acc: 0.958327
Clean dataset testing:[1/10] val_loss: 0.000861 val_acc: 0.966300
AT dataset testing:[1/10] val_loss: 0.099181 val_acc: 0.000000
[2/10][0/469] train_loss: 0.001271 train_acc: 0.968750
[2/10][100/469] train_loss: 0.000811 train_acc: 0.968827
[2/10][200/469] train_loss: 0.000780 train_acc: 0.969255
[2/10][300/469] train_loss: 0.000742 train_acc: 0.971475
[2/10][400/469] train_loss: 0.000747 train_acc: 0.970990
Clean dataset testing:[2/10] val_loss: 0.000576 val_acc: 0.979100
AT dataset testing:[2/10] val_loss: 0.117186 val_acc: 0.000000
[3/10][0/469] train_loss: 0.000530 train_acc: 0.976562
[3/10][100/469] train_loss: 0.000564 train_acc: 0.976872
[3/10][200/469] train_loss: 0.000601 train_acc: 0.975591
[3/10][300/469] train_loss: 0.000611 train_acc: 0.975784
[3/10][400/469] train_loss: 0.000607 train_acc: 0.976056
Clean dataset testing:[3/10] val_loss: 0.000459 val_acc: 0.981500
AT dataset testing:[3/10] val_loss: 0.122513 val_acc: 0.000000
[4/10][0/469] train_loss: 0.000472 train_acc: 0.976562
[4/10][100/469] train_loss: 0.000604 train_acc: 0.975093
[4/10][200/469] train_loss: 0.000585 train_acc: 0.976018
[4/10][300/469] train_loss: 0.000555 train_acc: 0.977393
[4/10][400/469] train_loss: 0.000532 train_acc: 0.978394
Clean dataset testing:[4/10] val_loss: 0.000430 val_acc: 0.982000
AT dataset testing:[4/10] val_loss: 0.129040 val_acc: 0.000000
[5/10][0/469] train_loss: 0.000559 train_acc: 0.968750
[5/10][100/469] train_loss: 0.000445 train_acc: 0.981977
[5/10][200/469] train_loss: 0.000455 train_acc: 0.981460
[5/10][300/469] train_loss: 0.000467 train_acc: 0.981338
[5/10][400/469] train_loss: 0.000471 train_acc: 0.981336
Clean dataset testing:[5/10] val_loss: 0.000453 val_acc: 0.980300
AT dataset testing:[5/10] val_loss: 0.136078 val_acc: 0.000000
[6/10][0/469] train_loss: 0.000875 train_acc: 0.968750
[6/10][100/469] train_loss: 0.000403 train_acc: 0.984375
[6/10][200/469] train_loss: 0.000417 train_acc: 0.983831
[6/10][300/469] train_loss: 0.000424 train_acc: 0.983570
[6/10][400/469] train_loss: 0.000424 train_acc: 0.983752
Clean dataset testing:[6/10] val_loss: 0.000387 val_acc: 0.984200
AT dataset testing:[6/10] val_loss: 0.136857 val_acc: 0.000000
[7/10][0/469] train_loss: 0.000132 train_acc: 1.000000
[7/10][100/469] train_loss: 0.000420 train_acc: 0.982519
[7/10][200/469] train_loss: 0.000389 train_acc: 0.983986
[7/10][300/469] train_loss: 0.000388 train_acc: 0.984635
[7/10][400/469] train_loss: 0.000382 train_acc: 0.984901
Clean dataset testing:[7/10] val_loss: 0.000335 val_acc: 0.986400
AT dataset testing:[7/10] val_loss: 0.146001 val_acc: 0.000000
[8/10][0/469] train_loss: 0.000173 train_acc: 1.000000
[8/10][100/469] train_loss: 0.000366 train_acc: 0.984452
[8/10][200/469] train_loss: 0.000341 train_acc: 0.985813
[8/10][300/469] train_loss: 0.000349 train_acc: 0.985439
[8/10][400/469] train_loss: 0.000359 train_acc: 0.985213
Clean dataset testing:[8/10] val_loss: 0.000343 val_acc: 0.984900
AT dataset testing:[8/10] val_loss: 0.144905 val_acc: 0.000000
[9/10][0/469] train_loss: 0.000103 train_acc: 1.000000
[9/10][100/469] train_loss: 0.000313 train_acc: 0.986928
[9/10][200/469] train_loss: 0.000337 train_acc: 0.986007
[9/10][300/469] train_loss: 0.000342 train_acc: 0.986010
[9/10][400/469] train_loss: 0.000341 train_acc: 0.986479
Clean dataset testing:[9/10] val_loss: 0.000399 val_acc: 0.983900
AT dataset testing:[9/10] val_loss: 0.155161 val_acc: 0.000000
nbits:6
all_conv_quan(
  (features): Sequential(
    (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace)
    (2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): ReLU(inplace)
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace)
    (8): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (9): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1))
  )
)
[0/10][0/469] train_loss: 0.017963 train_acc: 0.078125
[0/10][100/469] train_loss: 0.011176 train_acc: 0.564047
[0/10][200/469] train_loss: 0.007068 train_acc: 0.724425
[0/10][300/469] train_loss: 0.005337 train_acc: 0.792333
[0/10][400/469] train_loss: 0.004369 train_acc: 0.830794
Clean dataset testing:[0/10] val_loss: 0.001080 val_acc: 0.956700
AT dataset testing:[0/10] val_loss: 0.091265 val_acc: 0.000000
[1/10][0/469] train_loss: 0.000989 train_acc: 0.953125
[1/10][100/469] train_loss: 0.001216 train_acc: 0.951501
[1/10][200/469] train_loss: 0.001117 train_acc: 0.956390
[1/10][300/469] train_loss: 0.001064 train_acc: 0.958368
[1/10][400/469] train_loss: 0.001048 train_acc: 0.959340
Clean dataset testing:[1/10] val_loss: 0.000706 val_acc: 0.971200
AT dataset testing:[1/10] val_loss: 0.098784 val_acc: 0.000000
[2/10][0/469] train_loss: 0.000223 train_acc: 0.992188
[2/10][100/469] train_loss: 0.000818 train_acc: 0.968054
[2/10][200/469] train_loss: 0.000790 train_acc: 0.969061
[2/10][300/469] train_loss: 0.000802 train_acc: 0.969243
[2/10][400/469] train_loss: 0.000776 train_acc: 0.969880
Clean dataset testing:[2/10] val_loss: 0.000581 val_acc: 0.977100
AT dataset testing:[2/10] val_loss: 0.107141 val_acc: 0.000000
[3/10][0/469] train_loss: 0.000408 train_acc: 0.976562
[3/10][100/469] train_loss: 0.000672 train_acc: 0.973082
[3/10][200/469] train_loss: 0.000669 train_acc: 0.974347
[3/10][300/469] train_loss: 0.000665 train_acc: 0.974590
[3/10][400/469] train_loss: 0.000645 train_acc: 0.975355
Clean dataset testing:[3/10] val_loss: 0.000466 val_acc: 0.980100
AT dataset testing:[3/10] val_loss: 0.111393 val_acc: 0.000000
[4/10][0/469] train_loss: 0.001297 train_acc: 0.976562
[4/10][100/469] train_loss: 0.000585 train_acc: 0.976949
[4/10][200/469] train_loss: 0.000551 train_acc: 0.978273
[4/10][300/469] train_loss: 0.000563 train_acc: 0.978198
[4/10][400/469] train_loss: 0.000545 train_acc: 0.978978
Clean dataset testing:[4/10] val_loss: 0.000545 val_acc: 0.978400
AT dataset testing:[4/10] val_loss: 0.116384 val_acc: 0.000000
[5/10][0/469] train_loss: 0.000338 train_acc: 0.984375
[5/10][100/469] train_loss: 0.000487 train_acc: 0.980507
[5/10][200/469] train_loss: 0.000480 train_acc: 0.980838
[5/10][300/469] train_loss: 0.000478 train_acc: 0.981183
[5/10][400/469] train_loss: 0.000475 train_acc: 0.981511
Clean dataset testing:[5/10] val_loss: 0.000350 val_acc: 0.984100
AT dataset testing:[5/10] val_loss: 0.124012 val_acc: 0.000000
[6/10][0/469] train_loss: 0.000197 train_acc: 1.000000
[6/10][100/469] train_loss: 0.000433 train_acc: 0.982828
[6/10][200/469] train_loss: 0.000402 train_acc: 0.984181
[6/10][300/469] train_loss: 0.000408 train_acc: 0.983934
[6/10][400/469] train_loss: 0.000420 train_acc: 0.984005
Clean dataset testing:[6/10] val_loss: 0.000387 val_acc: 0.983700
AT dataset testing:[6/10] val_loss: 0.129716 val_acc: 0.000000
[7/10][0/469] train_loss: 0.000069 train_acc: 1.000000
[7/10][100/469] train_loss: 0.000359 train_acc: 0.984994
[7/10][200/469] train_loss: 0.000369 train_acc: 0.985386
[7/10][300/469] train_loss: 0.000379 train_acc: 0.984946
[7/10][400/469] train_loss: 0.000380 train_acc: 0.984804
Clean dataset testing:[7/10] val_loss: 0.000358 val_acc: 0.983000
AT dataset testing:[7/10] val_loss: 0.126742 val_acc: 0.000000
[8/10][0/469] train_loss: 0.000522 train_acc: 0.984375
[8/10][100/469] train_loss: 0.000381 train_acc: 0.985613
[8/10][200/469] train_loss: 0.000339 train_acc: 0.986979
[8/10][300/469] train_loss: 0.000348 train_acc: 0.986607
[8/10][400/469] train_loss: 0.000340 train_acc: 0.986654
Clean dataset testing:[8/10] val_loss: 0.000319 val_acc: 0.987000
AT dataset testing:[8/10] val_loss: 0.131819 val_acc: 0.000000
[9/10][0/469] train_loss: 0.000249 train_acc: 0.984375
[9/10][100/469] train_loss: 0.000304 train_acc: 0.987701
[9/10][200/469] train_loss: 0.000304 train_acc: 0.987757
[9/10][300/469] train_loss: 0.000305 train_acc: 0.987801
[9/10][400/469] train_loss: 0.000306 train_acc: 0.987804
Clean dataset testing:[9/10] val_loss: 0.000304 val_acc: 0.987800
AT dataset testing:[9/10] val_loss: 0.141950 val_acc: 0.000000
nbits:7
all_conv_quan(
  (features): Sequential(
    (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace)
    (2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): ReLU(inplace)
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace)
    (8): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (9): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1))
  )
)
[0/10][0/469] train_loss: 0.017971 train_acc: 0.125000
[0/10][100/469] train_loss: 0.011193 train_acc: 0.563892
[0/10][200/469] train_loss: 0.007074 train_acc: 0.724386
[0/10][300/469] train_loss: 0.005332 train_acc: 0.792385
[0/10][400/469] train_loss: 0.004383 train_acc: 0.829547
Clean dataset testing:[0/10] val_loss: 0.001085 val_acc: 0.956000
AT dataset testing:[0/10] val_loss: 0.089101 val_acc: 0.000000
[1/10][0/469] train_loss: 0.000662 train_acc: 0.976562
[1/10][100/469] train_loss: 0.001090 train_acc: 0.958694
[1/10][200/469] train_loss: 0.001075 train_acc: 0.957595
[1/10][300/469] train_loss: 0.001059 train_acc: 0.958160
[1/10][400/469] train_loss: 0.001020 train_acc: 0.959204
Clean dataset testing:[1/10] val_loss: 0.000711 val_acc: 0.971000
AT dataset testing:[1/10] val_loss: 0.101735 val_acc: 0.000000
[2/10][0/469] train_loss: 0.000579 train_acc: 0.968750
[2/10][100/469] train_loss: 0.000791 train_acc: 0.968054
[2/10][200/469] train_loss: 0.000757 train_acc: 0.969566
[2/10][300/469] train_loss: 0.000764 train_acc: 0.970126
[2/10][400/469] train_loss: 0.000724 train_acc: 0.971205
Clean dataset testing:[2/10] val_loss: 0.000534 val_acc: 0.976800
AT dataset testing:[2/10] val_loss: 0.106905 val_acc: 0.000000
[3/10][0/469] train_loss: 0.000470 train_acc: 0.984375
[3/10][100/469] train_loss: 0.000617 train_acc: 0.975557
[3/10][200/469] train_loss: 0.000629 train_acc: 0.974619
[3/10][300/469] train_loss: 0.000621 train_acc: 0.974668
[3/10][400/469] train_loss: 0.000600 train_acc: 0.975725
Clean dataset testing:[3/10] val_loss: 0.000459 val_acc: 0.981000
AT dataset testing:[3/10] val_loss: 0.118516 val_acc: 0.000000
[4/10][0/469] train_loss: 0.000335 train_acc: 0.976562
[4/10][100/469] train_loss: 0.000529 train_acc: 0.979811
[4/10][200/469] train_loss: 0.000526 train_acc: 0.979167
[4/10][300/469] train_loss: 0.000513 train_acc: 0.979418
[4/10][400/469] train_loss: 0.000509 train_acc: 0.979563
Clean dataset testing:[4/10] val_loss: 0.000386 val_acc: 0.983300
AT dataset testing:[4/10] val_loss: 0.123016 val_acc: 0.000000
[5/10][0/469] train_loss: 0.000362 train_acc: 0.984375
[5/10][100/469] train_loss: 0.000443 train_acc: 0.980972
[5/10][200/469] train_loss: 0.000435 train_acc: 0.981771
[5/10][300/469] train_loss: 0.000430 train_acc: 0.982117
[5/10][400/469] train_loss: 0.000428 train_acc: 0.982271
Clean dataset testing:[5/10] val_loss: 0.000344 val_acc: 0.986100
AT dataset testing:[5/10] val_loss: 0.131665 val_acc: 0.000000
[6/10][0/469] train_loss: 0.000377 train_acc: 0.984375
[6/10][100/469] train_loss: 0.000370 train_acc: 0.984066
[6/10][200/469] train_loss: 0.000394 train_acc: 0.983170
[6/10][300/469] train_loss: 0.000401 train_acc: 0.983363
[6/10][400/469] train_loss: 0.000400 train_acc: 0.983927
Clean dataset testing:[6/10] val_loss: 0.000354 val_acc: 0.984300
AT dataset testing:[6/10] val_loss: 0.132982 val_acc: 0.000000
[7/10][0/469] train_loss: 0.000286 train_acc: 0.984375
[7/10][100/469] train_loss: 0.000379 train_acc: 0.985071
[7/10][200/469] train_loss: 0.000366 train_acc: 0.985269
[7/10][300/469] train_loss: 0.000362 train_acc: 0.985154
[7/10][400/469] train_loss: 0.000363 train_acc: 0.985291
Clean dataset testing:[7/10] val_loss: 0.000344 val_acc: 0.984600
AT dataset testing:[7/10] val_loss: 0.137810 val_acc: 0.000000
[8/10][0/469] train_loss: 0.000353 train_acc: 0.976562
[8/10][100/469] train_loss: 0.000312 train_acc: 0.986696
[8/10][200/469] train_loss: 0.000330 train_acc: 0.986513
[8/10][300/469] train_loss: 0.000339 train_acc: 0.986374
[8/10][400/469] train_loss: 0.000341 train_acc: 0.986148
Clean dataset testing:[8/10] val_loss: 0.000308 val_acc: 0.986700
AT dataset testing:[8/10] val_loss: 0.144958 val_acc: 0.000000
[9/10][0/469] train_loss: 0.000128 train_acc: 0.992188
[9/10][100/469] train_loss: 0.000321 train_acc: 0.987856
[9/10][200/469] train_loss: 0.000303 train_acc: 0.988184
[9/10][300/469] train_loss: 0.000312 train_acc: 0.987853
[9/10][400/469] train_loss: 0.000313 train_acc: 0.987356
Clean dataset testing:[9/10] val_loss: 0.000298 val_acc: 0.985800
AT dataset testing:[9/10] val_loss: 0.152283 val_acc: 0.000000
nbits:8
all_conv_quan(
  (features): Sequential(
    (0): Conv2d(1, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): ReLU(inplace)
    (2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (4): ReLU(inplace)
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace)
    (8): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (9): Conv2d(16, 10, kernel_size=(3, 3), stride=(1, 1))
  )
)
[0/10][0/469] train_loss: 0.018000 train_acc: 0.132812
[0/10][100/469] train_loss: 0.010739 train_acc: 0.595142
[0/10][200/469] train_loss: 0.006853 train_acc: 0.740827
[0/10][300/469] train_loss: 0.005244 train_acc: 0.801651
[0/10][400/469] train_loss: 0.004362 train_acc: 0.834632
Clean dataset testing:[0/10] val_loss: 0.001234 val_acc: 0.953400
AT dataset testing:[0/10] val_loss: 0.096003 val_acc: 0.000000
[1/10][0/469] train_loss: 0.000808 train_acc: 0.953125
[1/10][100/469] train_loss: 0.001267 train_acc: 0.951114
[1/10][200/469] train_loss: 0.001223 train_acc: 0.953358
[1/10][300/469] train_loss: 0.001151 train_acc: 0.955928
[1/10][400/469] train_loss: 0.001102 train_acc: 0.957587
Clean dataset testing:[1/10] val_loss: 0.000795 val_acc: 0.969000
AT dataset testing:[1/10] val_loss: 0.107083 val_acc: 0.000000
[2/10][0/469] train_loss: 0.001242 train_acc: 0.976562
[2/10][100/469] train_loss: 0.000833 train_acc: 0.967512
[2/10][200/469] train_loss: 0.000810 train_acc: 0.968750
[2/10][300/469] train_loss: 0.000777 train_acc: 0.969762
[2/10][400/469] train_loss: 0.000769 train_acc: 0.970367
Clean dataset testing:[2/10] val_loss: 0.000596 val_acc: 0.976500
AT dataset testing:[2/10] val_loss: 0.112304 val_acc: 0.000000
[3/10][0/469] train_loss: 0.000672 train_acc: 0.968750
[3/10][100/469] train_loss: 0.000615 train_acc: 0.976330
[3/10][200/469] train_loss: 0.000629 train_acc: 0.975824
[3/10][300/469] train_loss: 0.000632 train_acc: 0.975680
[3/10][400/469] train_loss: 0.000619 train_acc: 0.975861
Clean dataset testing:[3/10] val_loss: 0.000480 val_acc: 0.981000
AT dataset testing:[3/10] val_loss: 0.117762 val_acc: 0.000000
[4/10][0/469] train_loss: 0.000172 train_acc: 1.000000
[4/10][100/469] train_loss: 0.000578 train_acc: 0.976485
[4/10][200/469] train_loss: 0.000563 train_acc: 0.977767
[4/10][300/469] train_loss: 0.000528 train_acc: 0.979028
[4/10][400/469] train_loss: 0.000546 train_acc: 0.978219
Clean dataset testing:[4/10] val_loss: 0.000444 val_acc: 0.980400
AT dataset testing:[4/10] val_loss: 0.117455 val_acc: 0.000000
[5/10][0/469] train_loss: 0.000213 train_acc: 0.992188
[5/10][100/469] train_loss: 0.000471 train_acc: 0.982054
[5/10][200/469] train_loss: 0.000488 train_acc: 0.981149
[5/10][300/469] train_loss: 0.000471 train_acc: 0.981364
[5/10][400/469] train_loss: 0.000474 train_acc: 0.981258
Clean dataset testing:[5/10] val_loss: 0.000361 val_acc: 0.983900
AT dataset testing:[5/10] val_loss: 0.121940 val_acc: 0.000000
[6/10][0/469] train_loss: 0.000293 train_acc: 0.984375
[6/10][100/469] train_loss: 0.000429 train_acc: 0.983524
[6/10][200/469] train_loss: 0.000422 train_acc: 0.982820
[6/10][300/469] train_loss: 0.000428 train_acc: 0.982999
[6/10][400/469] train_loss: 0.000412 train_acc: 0.983829
Clean dataset testing:[6/10] val_loss: 0.000384 val_acc: 0.982400
AT dataset testing:[6/10] val_loss: 0.129901 val_acc: 0.000000
[7/10][0/469] train_loss: 0.000457 train_acc: 0.976562
[7/10][100/469] train_loss: 0.000374 train_acc: 0.983834
[7/10][200/469] train_loss: 0.000409 train_acc: 0.982937
[7/10][300/469] train_loss: 0.000391 train_acc: 0.983908
[7/10][400/469] train_loss: 0.000387 train_acc: 0.983946
Clean dataset testing:[7/10] val_loss: 0.000349 val_acc: 0.984000
AT dataset testing:[7/10] val_loss: 0.133394 val_acc: 0.000000
[8/10][0/469] train_loss: 0.000853 train_acc: 0.960938
[8/10][100/469] train_loss: 0.000346 train_acc: 0.985458
[8/10][200/469] train_loss: 0.000360 train_acc: 0.985308
[8/10][300/469] train_loss: 0.000354 train_acc: 0.985699
[8/10][400/469] train_loss: 0.000346 train_acc: 0.985992
Clean dataset testing:[8/10] val_loss: 0.000287 val_acc: 0.986800
AT dataset testing:[8/10] val_loss: 0.140078 val_acc: 0.000000
[9/10][0/469] train_loss: 0.000689 train_acc: 0.976562
[9/10][100/469] train_loss: 0.000287 train_acc: 0.988939
[9/10][200/469] train_loss: 0.000293 train_acc: 0.988067
[9/10][300/469] train_loss: 0.000305 train_acc: 0.987593
[9/10][400/469] train_loss: 0.000323 train_acc: 0.987025
Clean dataset testing:[9/10] val_loss: 0.000327 val_acc: 0.985800
AT dataset testing:[9/10] val_loss: 0.142962 val_acc: 0.000000
