nbits:1
conv_and_fc_quan(
  (features): Sequential(
    (0): Conv2d(1, 20, kernel_size=(5, 5), stride=(1, 1))
    (1): ReLU(inplace)
    (2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(20, 50, kernel_size=(5, 5), stride=(1, 1))
    (4): ReLU(inplace)
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (classifier): Sequential(
    (0): Linear(in_features=800, out_features=500, bias=True)
    (1): ReLU(inplace)
    (2): Linear(in_features=500, out_features=10, bias=True)
  )
)
Traceback (most recent call last):
  File "train.py", line 99, in <module>
    data = attack.PGD_attack(net, device, data, labels, eps=AT_eps, alpha=AT_alpha, iters=AT_iters)
  File "/home/xy92/emerging-memory-project/attack.py", line 59, in PGD_attack
    grad = gradient_wrt_data(model,device,x_adv,lbl)
  File "/home/xy92/emerging-memory-project/attack.py", line 33, in gradient_wrt_data
    out = model(dat)
  File "/home/xy92/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py", line 489, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/xy92/emerging-memory-project/models_quantilization.py", line 33, in forward
    param.data = quantilization.Quantizer(self.nbits).apply(param.data)
TypeError: forward() missing 1 required positional argument: 'input'
